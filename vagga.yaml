_default:
  gradle-home: &gradle-home /work/.gradle
  cmd-opts: &cmd-opts
    container: jdk8
    user-id: 1
    external-user-id: 0
    prerequisites: [_mk-gradle-user-home]
    volumes:
      /tmp: !Tmpfs {size: 1Gi}
      /work/.gradle/caches: !CacheDir gradle-cache

containers:
  jdk8:
    environ:
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      GRADLE_USER_HOME: *gradle-home
    setup:
    - !Ubuntu xenial
    - !Install
      - openjdk-8-jdk-headless
    - !EnsureDir /opt/gradle
    - !Unzip
      url: https://services.gradle.org/distributions/gradle-4.3-bin.zip
      subdir: gradle-4.3
      path: /opt/gradle
    - !Sh ln -s /opt/gradle/bin/gradle /usr/local/bin/gradle

  jdk9:
    environ:
      JAVA_HOME: /usr/lib/jvm/java-9-openjdk-amd64
      GRADLE_USER_HOME: *gradle-home
    setup:
    - !Ubuntu xenial
    - !AptTrust
      keys: [4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659]
    - !UbuntuPPA jonathonf/openjdk
    - !Install
      - openjdk-9-jdk-headless
    - !EnsureDir /opt/gradle
    - !Unzip
      url: https://services.gradle.org/distributions/gradle-4.3-bin.zip
      subdir: gradle-4.3
      path: /opt/gradle
    - !Sh ln -s /opt/gradle/bin/gradle /usr/local/bin/gradle

  web-server:
    setup:
    - !Ubuntu xenial
    - !Tar
      url: https://github.com/cortesi/devd/releases/download/v0.7/devd-0.7-linux64.tgz
      sha256: 3bf919c081f46d4a0e1e5c8f35d943b949db39811f4b99177d90465ebb17fd4c
      subdir: devd-0.7-linux64
      path: /opt/devd

  elastic:
    environ:
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
    setup:
    - !Ubuntu xenial
    - !Install [ca-certificates]
    - !AptTrust
      server: pgp.mit.edu
      keys: [D88E42B4]
    - !UbuntuRepo
      url: https://artifacts.elastic.co/packages/5.x/apt
      suite: stable
      components: [main]
    - !Env
      ES_SKIP_SET_KERNEL_PARAMETERS: true
    - !Install
      - openjdk-8-jdk-headless
      - elasticsearch=5.5.2
    - !EnsureDir /var/elasticsearch
    volumes:
      /var/elasticsearch: !Persistent { name: elastic }
    auto-clean: true

commands:
  _mk-gradle-user-home: !Command
    container: jdk8
    run: mkdir -p $GRADLE_USER_HOME/caches

  daemon: !Command
    <<: *cmd-opts
    description: Run gradle daemon
    run: |
      # --foreground option runs daemon with different jvm options
      # so then another gradle process rejects to connect to the daemon
      LOG_DIR=$GRADLE_USER_HOME/daemon/4.0
      rm -rf $LOG_DIR/daemon-*.out.log
      gradle --dry-run --daemon build
      tail -f $LOG_DIR/daemon-*.out.log

  assemble: !Command
    <<: *cmd-opts
    description: Assembles the outputs of this project
    run: [gradle, assemble]

  assemble-release: !Command
    <<: *cmd-opts
    description: Assembles the outputs of this project
    run: [gradle, assemble, -Prelease]

  build: !Command
    <<: *cmd-opts
    description: Assembles and tests this project
    run: [gradle, build]

  compile: !Command
    <<: *cmd-opts
    description: Compiles main source files
    run: [gradle, compileKotlin]

  compile-test: !Command
    <<: *cmd-opts
    description: Compiles test source files
    run: [gradle, compileTestKotlin]

  test-unit: !Command
    <<: *cmd-opts
    description: Runs unit tests
    run: [gradle, test]

  test-integ: !Command
    <<: *cmd-opts
    description: Runs integration tests
    run:
    - gradle
    - integTest
    - -Djava.io.tmpdir=/tmp
    - -Dtests.class=*.ExternalFieldMapperIT

  clean: !Command
    <<: *cmd-opts
    description: Deletes the build directory
    run: [gradle, clean]

  clean-build: !Command
    <<: *cmd-opts
    description: Deletes the build directory and then assembles and tests the project
    run: [gradle, clean, build]

  gradle: !Command
    <<: *cmd-opts
    description: Runs arbitrary gradle task
    run: [gradle]

  gradle-jdk9: !Command
    <<: *cmd-opts
    container: jdk9
    description: Runs arbitrary gradle task
    run: [gradle]

  kotlinc: !Command
    <<: *cmd-opts
    description: Runs kotlin compiler
    run: [kotlinc]

  java: !Command
    <<: *cmd-opts
    description: Runs java virtual machine
    run: [java]

  serve-test-files: &serve-test-files !Command
    description: Runs web server that serves files for tests
    container: web-server
    run: /opt/devd/devd -p 8088 ./src/test/resources/indices

  test-func: !Supervise
    options: |
      Usage: vagga test-func [--no-daemon] [options]

      Options:
        --no-daemon  Run build without daemon
    children:
      web-server: *serve-test-files
      test: !Command
        <<: *cmd-opts
        run: |
            gradle -p external-file testFunc $VAGGACLI_NO_DAEMON

  test: !Command
    <<: *cmd-opts
    description: "Run all tests: unit, functional and integration"
    prerequisites:
    - test-unit
    - test-func
    - test-integ
    run: |
      echo "All tests are passed"

  elastic: !Command
    description: Run elasticsearch
    options: |
      Usage: vagga elastic [--with-jstatd]

      Options:
        --with-jstatd  Run jstatd in background
    container: elastic
    user-id: 1
    external-user-id: 0
    volumes:
      /usr/share/elasticsearch/plugins: !Tmpfs
    prerequisites: [assemble]
    run: |
      set -e
      if [ -n "${VAGGAOPT_WITH_JSTATD}" ]; then
        jstatd -J-Djava.security.policy=/work/jstatd.all.policy &
      fi
      DISTRIBUTION_DIR=/work/build/distributions
      PLUGIN_PATH=$DISTRIBUTION_DIR/mapper-external-file-$(cat /work/project.version)-es5.5.2.zip
      /usr/share/elasticsearch/bin/elasticsearch-plugin install file:${PLUGIN_PATH}
      /usr/share/elasticsearch/bin/elasticsearch \
        -E path.conf=/etc/elasticsearch \
        -E path.logs=/var/elasticsearch/logs \
        -E path.data=/var/elasticsearch/data \
        -E logger.company.evo.elasticsearch=debug
